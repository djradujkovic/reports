{"ast":null,"code":"var _jsxFileName = \"/home/djole/Documents/fullstack/sluzba/frontend/src/components/Table/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Filter from \"../Filter/Filter\";\nimport FindParent from \"../../helpers/FindParent\";\nimport \"./Table.style.css\";\nimport TableRow from \"./TableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst superData = [];\n\nconst Fields = ({\n  page,\n  length\n}) => {\n  return page.fields.map(field => {\n    return /*#__PURE__*/_jsxDEV(IfTable, {\n      length: length,\n      field: field\n    }, field.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  });\n};\n\n_c = Fields;\n\nconst IfTable = ({\n  field,\n  length\n}) => {\n  if (!field.table) return null;\n  const parent = FindParent(field);\n\n  if (!superData.find(d => d.key === field.key)) {\n    superData.push(field);\n  }\n\n  if (parent) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: field.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fields, {\n        length: length,\n        page: parent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: field.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = IfTable;\n\nconst Table = ({\n  data,\n  page,\n  defaultData\n}) => {\n  _s();\n\n  // console.log(data);\n  const [displayData, setDisplayData] = useState(data);\n  const length = superData.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-grid\",\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      setDisplayData: setDisplayData,\n      defaultFilter: defaultData,\n      data: data,\n      page: page,\n      filters: superData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        style: {\n          gridTemplateColumns: `repeat(${length}, 1fr)`\n        },\n        children: /*#__PURE__*/_jsxDEV(Fields, {\n          page: page,\n          length: length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-data\",\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          page: page,\n          length: length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), displayData !== [] && displayData.map(d => /*#__PURE__*/_jsxDEV(TableRow, {\n          page: page,\n          data: d,\n          length: length\n        }, d.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"EbnIJ/rnhSYbb+eHZsMSyztjN68=\");\n\n_c3 = Table;\nexport default Table;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Fields\");\n$RefreshReg$(_c2, \"IfTable\");\n$RefreshReg$(_c3, \"Table\");","map":{"version":3,"sources":["/home/djole/Documents/fullstack/sluzba/frontend/src/components/Table/Table.js"],"names":["React","useState","Filter","FindParent","TableRow","superData","Fields","page","length","fields","map","field","key","IfTable","table","parent","find","d","push","name","Table","data","defaultData","displayData","setDisplayData","gridTemplateColumns","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Filter from \"../Filter/Filter\";\nimport FindParent from \"../../helpers/FindParent\";\nimport \"./Table.style.css\";\nimport TableRow from \"./TableRow\";\n\nconst superData = [];\n\nconst Fields = ({ page, length }) => {\n  return page.fields.map((field) => {\n    return <IfTable key={field.key} length={length} field={field} />;\n  });\n};\n\nconst IfTable = ({ field, length }) => {\n  if (!field.table) return null;\n  const parent = FindParent(field);\n  if (!superData.find((d) => d.key === field.key)) {\n    superData.push(field);\n  }\n  if (parent) {\n    return (\n      <>\n        <h3>{field.name}</h3>\n        <Fields length={length} page={parent} />\n      </>\n    );\n  }\n  return <h3>{field.name}</h3>;\n};\n\nconst Table = ({ data, page, defaultData }) => {\n  // console.log(data);\n  const [displayData, setDisplayData] = useState(data);\n  const length = superData.length;\n\n  return (\n    <div className=\"table-grid\">\n      <Filter\n        setDisplayData={setDisplayData}\n        defaultFilter={defaultData}\n        data={data}\n        page={page}\n        filters={superData}\n      />\n      <div className=\"table\">\n        <div\n          className=\"head\"\n          style={{ gridTemplateColumns: `repeat(${length}, 1fr)` }}\n        >\n          <Fields page={page} length={length} />\n        </div>\n        <div className=\"table-data\">\n          <TableRow page={page} length={length} />\n          {displayData !== [] &&\n            displayData.map((d) => (\n              <TableRow key={d.id} page={page} data={d} length={length} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}