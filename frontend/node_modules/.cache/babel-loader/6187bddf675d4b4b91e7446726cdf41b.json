{"ast":null,"code":"var _jsxFileName = \"/home/djole/Documents/fullstack/sluzba/frontend/src/components/Select/Select.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { GetData } from \"../../helpers/GetStates\";\nimport \"./Select.style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Select = ({\n  id,\n  field,\n  value,\n  setData\n}) => {\n  _s();\n\n  const options = GetData(field.options);\n  const [selected, setSelected] = useState(value);\n  const [isOpen, setIsOpen] = useState(false);\n  const [displayOptions, setDisplayOptions] = useState(options);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    if (selected) {\n      setSearch(options.find(option => option.id === selected).name);\n    } else {\n      setSearch(\"\");\n    }\n\n    setDisplayOptions(options.filter(option => {\n      if (option.name) {\n        return option.name.toLocaleLowerCase().search(search.toLocaleLowerCase()) !== -1;\n      }\n\n      return options;\n    }));\n  }, [search, options, selected, value]);\n\n  const handleSelect = (e, option) => {\n    e.preventDefault();\n    setSearch(option.name);\n    setSelected(option.id);\n    setData(oldData => ({ ...oldData,\n      [field.key]: option.id\n    }));\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select\",\n    id: id,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: () => setIsOpen(oldOpen => !oldOpen) // onFocus={() => setIsOpen(true)}\n      // onBlur={() => setIsOpen(false)}\n      ,\n      onChange: e => setSearch(e.target.value),\n      value: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayOptions.map(option => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => handleSelect(e, option),\n          children: option.name\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Select, \"8baY39O1zItONzb1Ad//RHdLzsg=\");\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/home/djole/Documents/fullstack/sluzba/frontend/src/components/Select/Select.js"],"names":["useEffect","useState","GetData","Select","id","field","value","setData","options","selected","setSelected","isOpen","setIsOpen","displayOptions","setDisplayOptions","search","setSearch","find","option","name","filter","toLocaleLowerCase","handleSelect","e","preventDefault","oldData","key","oldOpen","target","map"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,OAAO,oBAAP;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAmC;AAAA;;AAChD,QAAMC,OAAO,GAAGN,OAAO,CAACG,KAAK,CAACG,OAAP,CAAvB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACK,KAAD,CAAxC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAACO,OAAD,CAApD;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,QAAJ,EAAc;AACZO,MAAAA,SAAS,CAACR,OAAO,CAACS,IAAR,CAAcC,MAAD,IAAYA,MAAM,CAACd,EAAP,KAAcK,QAAvC,EAAiDU,IAAlD,CAAT;AACD,KAFD,MAEO;AACLH,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD;;AACDF,IAAAA,iBAAiB,CACfN,OAAO,CAACY,MAAR,CAAgBF,MAAD,IAAY;AACzB,UAAIA,MAAM,CAACC,IAAX,EAAiB;AACf,eACED,MAAM,CAACC,IAAP,CACGE,iBADH,GAEGN,MAFH,CAEUA,MAAM,CAACM,iBAAP,EAFV,MAE0C,CAAC,CAH7C;AAKD;;AACD,aAAOb,OAAP;AACD,KATD,CADe,CAAjB;AAYD,GAlBQ,EAkBN,CAACO,MAAD,EAASP,OAAT,EAAkBC,QAAlB,EAA4BH,KAA5B,CAlBM,CAAT;;AAoBA,QAAMgB,YAAY,GAAG,CAACC,CAAD,EAAIL,MAAJ,KAAe;AAClCK,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,SAAS,CAACE,MAAM,CAACC,IAAR,CAAT;AACAT,IAAAA,WAAW,CAACQ,MAAM,CAACd,EAAR,CAAX;AACAG,IAAAA,OAAO,CAAEkB,OAAD,KAAc,EAAE,GAAGA,OAAL;AAAc,OAACpB,KAAK,CAACqB,GAAP,GAAaR,MAAM,CAACd;AAAlC,KAAd,CAAD,CAAP;AACAQ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,EAAE,EAAER,EAA5B;AAAA,4BACE;AACE,MAAA,OAAO,EAAE,MAAMQ,SAAS,CAAEe,OAAD,IAAa,CAACA,OAAf,CAD1B,CAEE;AACA;AAHF;AAIE,MAAA,QAAQ,EAAGJ,CAAD,IAAOP,SAAS,CAACO,CAAC,CAACK,MAAF,CAAStB,KAAV,CAJ5B;AAKE,MAAA,KAAK,EAAES;AALT;AAAA;AAAA;AAAA;AAAA,YADF,EAQGJ,MAAM,iBACL;AAAA,gBACGE,cAAc,CAACgB,GAAf,CAAoBX,MAAD,IAAY;AAC9B,4BACE;AAAqB,UAAA,OAAO,EAAGK,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIL,MAAJ,CAAjD;AAAA,oBACGA,MAAM,CAACC;AADV,WAAUD,MAAM,CAACd,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAzDD;;GAAMD,M;;KAAAA,M;AA2DN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { GetData } from \"../../helpers/GetStates\";\n\nimport \"./Select.style.css\";\n\nconst Select = ({ id, field, value, setData }) => {\n  const options = GetData(field.options);\n  const [selected, setSelected] = useState(value);\n  const [isOpen, setIsOpen] = useState(false);\n  const [displayOptions, setDisplayOptions] = useState(options);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    if (selected) {\n      setSearch(options.find((option) => option.id === selected).name);\n    } else {\n      setSearch(\"\");\n    }\n    setDisplayOptions(\n      options.filter((option) => {\n        if (option.name) {\n          return (\n            option.name\n              .toLocaleLowerCase()\n              .search(search.toLocaleLowerCase()) !== -1\n          );\n        }\n        return options;\n      })\n    );\n  }, [search, options, selected, value]);\n\n  const handleSelect = (e, option) => {\n    e.preventDefault();\n    setSearch(option.name);\n    setSelected(option.id);\n    setData((oldData) => ({ ...oldData, [field.key]: option.id }));\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"select\" id={id}>\n      <input\n        onClick={() => setIsOpen((oldOpen) => !oldOpen)}\n        // onFocus={() => setIsOpen(true)}\n        // onBlur={() => setIsOpen(false)}\n        onChange={(e) => setSearch(e.target.value)}\n        value={search}\n      ></input>\n      {isOpen && (\n        <div>\n          {displayOptions.map((option) => {\n            return (\n              <div key={option.id} onClick={(e) => handleSelect(e, option)}>\n                {option.name}\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}