{"ast":null,"code":"var _jsxFileName = \"/home/djole/Documents/fullstack/training/frontend2/src/components/Form/Field.js\";\nimport { GetData } from \"../../helpers/GetStates\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst JustField = ({\n  field,\n  data,\n  setData\n}) => {\n  const editable = false;\n  const options = GetData(field.options);\n  const style = {\n    border: !editable && \"none\",\n    WebkitAppearance: !editable && \"none\"\n  };\n\n  const handleChange = e => {\n    let value = 0;\n\n    switch (typeof data[e.target.name]) {\n      case \"string\":\n        value = e.target.value;\n        break;\n\n      case \"number\":\n        if (e.target.value) value = parseInt(e.target.value);\n        break;\n\n      case \"boolean\":\n        value = !data[e.target.name];\n        break;\n\n      default:\n        value = e.target.value;\n    }\n\n    setData(oldData => ({ ...oldData,\n      [e.target.name]: value\n    }));\n  }; // if (!editable) {\n  // return <span>{data[field.key]}</span>;\n  // }\n\n\n  switch (field.type) {\n    case \"select\":\n      return /*#__PURE__*/_jsxDEV(\"select\", {\n        id: field.key,\n        name: field.key,\n        value: data[field.key],\n        onChange: e => handleChange(e) // onMouseOver={(e) => e.stopPropagation()}\n        ,\n        disabled: !editable,\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0,\n          children: [field.label, \"..\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.id,\n            children: option.name\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        value: data[field.key],\n        name: field.key,\n        id: field.key,\n        type: field.type,\n        onChange: e => handleChange(e),\n        required: field.required,\n        style: style,\n        disabled: !editable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n  } //   return newField;\n\n};\n\n_c = JustField;\n\nconst Field = ({\n  field,\n  data,\n  setData\n}) => {\n  if (field.name === \"\") return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: field.key,\n      children: [field.name, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JustField, {\n      field: field,\n      data: data,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = Field;\nexport default Field;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"JustField\");\n$RefreshReg$(_c2, \"Field\");","map":{"version":3,"sources":["/home/djole/Documents/fullstack/training/frontend2/src/components/Form/Field.js"],"names":["GetData","JustField","field","data","setData","editable","options","style","border","WebkitAppearance","handleChange","e","value","target","name","parseInt","oldData","type","key","label","map","option","id","required","Field"],"mappings":"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","sourcesContent":["import { GetData } from \"../../helpers/GetStates\";\n\nconst JustField = ({ field, data, setData }) => {\n  const editable = false;\n  const options = GetData(field.options);\n  const style = {\n    border: !editable && \"none\",\n    WebkitAppearance: !editable && \"none\",\n  };\n  const handleChange = (e) => {\n    let value = 0;\n    switch (typeof data[e.target.name]) {\n      case \"string\":\n        value = e.target.value;\n        break;\n      case \"number\":\n        if (e.target.value) value = parseInt(e.target.value);\n        break;\n      case \"boolean\":\n        value = !data[e.target.name];\n        break;\n      default:\n        value = e.target.value;\n    }\n    setData((oldData) => ({ ...oldData, [e.target.name]: value }));\n  };\n  // if (!editable) {\n  // return <span>{data[field.key]}</span>;\n  // }\n  switch (field.type) {\n    case \"select\":\n      return (\n        <select\n          id={field.key}\n          name={field.key}\n          value={data[field.key]}\n          onChange={(e) => handleChange(e)}\n          // onMouseOver={(e) => e.stopPropagation()}\n          disabled={!editable}\n          style={style}\n        >\n          <option value={0}>{field.label}..</option>\n          {options.map((option) => {\n            return (\n              <option key={option.id} value={option.id}>\n                {option.name}\n              </option>\n            );\n          })}\n        </select>\n      );\n    default:\n      return (\n        <input\n          value={data[field.key]}\n          name={field.key}\n          id={field.key}\n          type={field.type}\n          onChange={(e) => handleChange(e)}\n          required={field.required}\n          style={style}\n          disabled={!editable}\n        />\n      );\n  }\n  //   return newField;\n};\n\nconst Field = ({ field, data, setData }) => {\n  if (field.name === \"\") return null;\n  return (\n    <>\n      <label htmlFor={field.key}>{field.name}:</label>\n      <JustField field={field} data={data} setData={setData} />\n    </>\n  );\n};\n\nexport default Field;\n"]},"metadata":{},"sourceType":"module"}