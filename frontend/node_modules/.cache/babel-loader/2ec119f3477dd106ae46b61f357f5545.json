{"ast":null,"code":"import { GET } from \"../types\";\nconst initialState = {\n  users: [],\n  cities: [],\n  projects: [],\n  positions: []\n};\nexport default function data(state = initialState, action) {\n  switch (action.type) {\n    case GET:\n      return { ...state,\n        [action.page]: action.payload\n      };\n\n    case ADD:\n      return { ...state,\n        [action.page]: { ...state[action.page],\n          data: [...state[action.page].data, action.payload]\n        }\n      };\n\n    case UPDATE:\n      state[action.page].data = state[action.page].data.map(user => {\n        if (user.id === action.payload.id) {\n          user = action.payload;\n        }\n\n        return user;\n      });\n      return { ...state,\n        [action.page]: { ...state[action.page],\n          data: [...state[action.page].data]\n        }\n      };\n\n    case DELETE:\n      return { ...state,\n        [action.page]: { ...state[action.page],\n          data: state[action.page].data.filter(user => user.id !== action.payload)\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/djole/Documents/fullstack/training/frontend2/src/redux/reducers/data.js"],"names":["GET","initialState","users","cities","projects","positions","data","state","action","type","page","payload","ADD","UPDATE","map","user","id","DELETE","filter"],"mappings":"AAAA,SAASA,GAAT,QAAoB,UAApB;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,MAAM,EAAE,EAArB;AAAyBC,EAAAA,QAAQ,EAAE,EAAnC;AAAuCC,EAAAA,SAAS,EAAE;AAAlD,CAArB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGN,YAAtB,EAAoCO,MAApC,EAA4C;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,GAAL;AACE,aAAO,EACL,GAAGO,KADE;AAEL,SAACC,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAFjB,OAAP;;AAIF,SAAKC,GAAL;AACE,aAAO,EACL,GAAGL,KADE;AAEL,SAACC,MAAM,CAACE,IAAR,GAAe,EACb,GAAGH,KAAK,CAACC,MAAM,CAACE,IAAR,CADK;AAEbJ,UAAAA,IAAI,EAAE,CAAC,GAAGC,KAAK,CAACC,MAAM,CAACE,IAAR,CAAL,CAAmBJ,IAAvB,EAA6BE,MAAM,CAACG,OAApC;AAFO;AAFV,OAAP;;AAOF,SAAKE,MAAL;AACEN,MAAAA,KAAK,CAACC,MAAM,CAACE,IAAR,CAAL,CAAmBJ,IAAnB,GAA0BC,KAAK,CAACC,MAAM,CAACE,IAAR,CAAL,CAAmBJ,IAAnB,CAAwBQ,GAAxB,CAA6BC,IAAD,IAAU;AAC9D,YAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,OAAP,CAAeK,EAA/B,EAAmC;AACjCD,UAAAA,IAAI,GAAGP,MAAM,CAACG,OAAd;AACD;;AACD,eAAOI,IAAP;AACD,OALyB,CAA1B;AAMA,aAAO,EACL,GAAGR,KADE;AAEL,SAACC,MAAM,CAACE,IAAR,GAAe,EACb,GAAGH,KAAK,CAACC,MAAM,CAACE,IAAR,CADK;AAEbJ,UAAAA,IAAI,EAAE,CAAC,GAAGC,KAAK,CAACC,MAAM,CAACE,IAAR,CAAL,CAAmBJ,IAAvB;AAFO;AAFV,OAAP;;AAOF,SAAKW,MAAL;AACE,aAAO,EACL,GAAGV,KADE;AAEL,SAACC,MAAM,CAACE,IAAR,GAAe,EACb,GAAGH,KAAK,CAACC,MAAM,CAACE,IAAR,CADK;AAEbJ,UAAAA,IAAI,EAAEC,KAAK,CAACC,MAAM,CAACE,IAAR,CAAL,CAAmBJ,IAAnB,CAAwBY,MAAxB,CACHH,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,OADzB;AAFO;AAFV,OAAP;;AASF;AACE,aAAOJ,KAAP;AAvCJ;AAyCD","sourcesContent":["import { GET } from \"../types\";\n\nconst initialState = { users: [], cities: [], projects: [], positions: [] };\n\nexport default function data(state = initialState, action) {\n  switch (action.type) {\n    case GET:\n      return {\n        ...state,\n        [action.page]: action.payload,\n      };\n    case ADD:\n      return {\n        ...state,\n        [action.page]: {\n          ...state[action.page],\n          data: [...state[action.page].data, action.payload],\n        },\n      };\n    case UPDATE:\n      state[action.page].data = state[action.page].data.map((user) => {\n        if (user.id === action.payload.id) {\n          user = action.payload;\n        }\n        return user;\n      });\n      return {\n        ...state,\n        [action.page]: {\n          ...state[action.page],\n          data: [...state[action.page].data],\n        },\n      };\n    case DELETE:\n      return {\n        ...state,\n        [action.page]: {\n          ...state[action.page],\n          data: state[action.page].data.filter(\n            (user) => user.id !== action.payload\n          ),\n        },\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}