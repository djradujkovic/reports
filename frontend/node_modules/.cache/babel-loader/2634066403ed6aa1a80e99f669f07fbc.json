{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getData } from \"../redux/actions/data\";\nexport const GetPages = () => {\n  _s();\n\n  return useSelector(state => state.pages.pages);\n};\n\n_s(GetPages, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = GetPages;\n\nconst GetPageByKey = page => {\n  const pages = GetPages();\n  return pages.find(p => p.key === page);\n};\n\n_c2 = GetPageByKey;\nexport const GetData = page => {\n  _s2();\n\n  return useSelector(state => state.data[page]);\n};\n\n_s2(GetData, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = GetData;\nexport const GetDataById = (page, id) => GetData(page).find(p => p.id === id);\n_c4 = GetDataById;\nexport const GetForeigns = page => {\n  _s3();\n\n  const dispatch = useDispatch();\n  const fields = GetPageByKey(page).fields;\n  useEffect(() => {\n    dispatch(getData(page));\n  }, [dispatch, page]);\n  fields.forEach(field => {\n    if (field.options) {\n      GetForeigns(field.options);\n    }\n  });\n};\n\n_s3(GetForeigns, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c5 = GetForeigns;\nexport const GetUser = () => {\n  _s4();\n\n  return useSelector(state => state.auth.user);\n};\n\n_s4(GetUser, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c6 = GetUser;\nexport const getMaxValue = (page, field) => {\n  const data = GetData(page);\n  const priceList = data.reduce((prev, current) => {\n    return [...prev, current[field]];\n  }, []);\n  return Math.max(...priceList);\n};\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"GetPages\");\n$RefreshReg$(_c2, \"GetPageByKey\");\n$RefreshReg$(_c3, \"GetData\");\n$RefreshReg$(_c4, \"GetDataById\");\n$RefreshReg$(_c5, \"GetForeigns\");\n$RefreshReg$(_c6, \"GetUser\");","map":{"version":3,"sources":["/home/djole/Documents/fullstack/sluzba/frontend/src/helpers/GetStates.js"],"names":["useEffect","useSelector","useDispatch","getData","GetPages","state","pages","GetPageByKey","page","find","p","key","GetData","data","GetDataById","id","GetForeigns","dispatch","fields","forEach","field","options","GetUser","auth","user","getMaxValue","priceList","reduce","prev","current","Math","max"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG;AAAA;;AAAA,SAAMH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYA,KAAxB,CAAjB;AAAA,CAAjB;;GAAMF,Q;UAAiBH,W;;;KAAjBG,Q;;AACb,MAAMG,YAAY,GAAIC,IAAD,IAAU;AAC7B,QAAMF,KAAK,GAAGF,QAAQ,EAAtB;AACA,SAAOE,KAAK,CAACG,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUH,IAA5B,CAAP;AACD,CAHD;;MAAMD,Y;AAKN,OAAO,MAAMK,OAAO,GAAIJ,IAAD;AAAA;;AAAA,SAAUP,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACQ,IAAN,CAAWL,IAAX,CAAZ,CAArB;AAAA,CAAhB;;IAAMI,O;UAAoBX,W;;;MAApBW,O;AAEb,OAAO,MAAME,WAAW,GAAG,CAACN,IAAD,EAAOO,EAAP,KAAcH,OAAO,CAACJ,IAAD,CAAP,CAAcC,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACK,EAAF,KAASA,EAAnC,CAAlC;MAAMD,W;AAEb,OAAO,MAAME,WAAW,GAAIR,IAAD,IAAU;AAAA;;AACnC,QAAMS,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,MAAM,GAAGX,YAAY,CAACC,IAAD,CAAZ,CAAmBU,MAAlC;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACd,OAAO,CAACK,IAAD,CAAR,CAAR;AACD,GAFQ,EAEN,CAACS,QAAD,EAAWT,IAAX,CAFM,CAAT;AAGAU,EAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAW;AACxB,QAAIA,KAAK,CAACC,OAAV,EAAmB;AACjBL,MAAAA,WAAW,CAACI,KAAK,CAACC,OAAP,CAAX;AACD;AACF,GAJD;AAKD,CAXM;;IAAML,W;UACMd,W;;;MADNc,W;AAab,OAAO,MAAMM,OAAO,GAAG;AAAA;;AAAA,SAAMrB,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACkB,IAAN,CAAWC,IAAvB,CAAjB;AAAA,CAAhB;;IAAMF,O;UAAgBrB,W;;;MAAhBqB,O;AAEb,OAAO,MAAMG,WAAW,GAAG,CAACjB,IAAD,EAAOY,KAAP,KAAiB;AAC1C,QAAMP,IAAI,GAAGD,OAAO,CAACJ,IAAD,CAApB;AACA,QAAMkB,SAAS,GAAGb,IAAI,CAACc,MAAL,CAAY,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC/C,WAAO,CAAC,GAAGD,IAAJ,EAAUC,OAAO,CAACT,KAAD,CAAjB,CAAP;AACD,GAFiB,EAEf,EAFe,CAAlB;AAGA,SAAOU,IAAI,CAACC,GAAL,CAAS,GAAGL,SAAZ,CAAP;AACD,CANM","sourcesContent":["import { useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getData } from \"../redux/actions/data\";\n\nexport const GetPages = () => useSelector((state) => state.pages.pages);\nconst GetPageByKey = (page) => {\n  const pages = GetPages();\n  return pages.find((p) => p.key === page);\n};\n\nexport const GetData = (page) => useSelector((state) => state.data[page]);\n\nexport const GetDataById = (page, id) => GetData(page).find((p) => p.id === id);\n\nexport const GetForeigns = (page) => {\n  const dispatch = useDispatch();\n  const fields = GetPageByKey(page).fields;\n  useEffect(() => {\n    dispatch(getData(page));\n  }, [dispatch, page]);\n  fields.forEach((field) => {\n    if (field.options) {\n      GetForeigns(field.options);\n    }\n  });\n};\n\nexport const GetUser = () => useSelector((state) => state.auth.user);\n\nexport const getMaxValue = (page, field) => {\n  const data = GetData(page);\n  const priceList = data.reduce((prev, current) => {\n    return [...prev, current[field]];\n  }, []);\n  return Math.max(...priceList);\n};\n"]},"metadata":{},"sourceType":"module"}