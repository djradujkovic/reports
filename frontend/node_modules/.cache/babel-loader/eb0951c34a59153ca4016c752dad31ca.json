{"ast":null,"code":"var _jsxFileName = \"/home/djole/Documents/fullstack/training/frontend2/src/components/Table/SubTable.js\";\nimport GetDataById from \"../../helpers/getDataById\";\nimport FindParent from \"../../helpers/FindParent\";\nimport Form from \"../Form/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SubTableLogic = ({\n  page,\n  id\n}) => {\n  const pages = [{\n    page: page,\n    id: id\n  }];\n  SubPageLogic(page, id, pages);\n  return /*#__PURE__*/_jsxDEV(SubTable, {\n    pages: pages\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_c = SubTableLogic;\n\nconst SubPageLogic = (page, id, pages) => {\n  const data = GetDataById(page, id);\n  return SubFieldsLogic(data, page, pages);\n};\n\n_c2 = SubPageLogic;\n\nconst SubFieldsLogic = (data, page, pages) => {\n  page.fields.forEach(field => {\n    if (field.options) {\n      const parent = FindParent(field);\n      const parentMore = {\n        page: parent,\n        id: data[field.key]\n      };\n      pages.push(parentMore);\n      SubPageLogic(parent, data[field.key], pages);\n    }\n  });\n};\n\n_c3 = SubFieldsLogic;\n\nconst SubTable = ({\n  pages\n}) => {\n  return pages.map((p, i) => {\n    return /*#__PURE__*/_jsxDEV(SubPage, {\n      id: p.id,\n      page: p.page\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  });\n};\n\n_c4 = SubTable;\n\nconst SubPage = ({\n  page,\n  id\n}) => {\n  const data = GetDataById(page, id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sub\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head\",\n      children: page.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      data: data,\n      active: id,\n      fields: page.fields,\n      defaultData: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = SubPage;\n\nconst SubFields = ({\n  data,\n  page\n}) => {\n  return page.fields.map(field => {\n    return /*#__PURE__*/_jsxDEV(SubField, {\n      field: field,\n      data: data\n    }, field.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  });\n};\n\n_c6 = SubFields;\n\nconst SubField = ({\n  field,\n  data\n}) => {\n  const parent = FindParent(field);\n\n  if (parent) {\n    const page = GetDataById(parent, data[field.key]);\n\n    if (page) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [field.name, \": \", page.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  if (field.name) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [field.name, \": \", data[field.key], field.key === \"price\" && \"KM\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n};\n\n_c7 = SubField;\nexport default SubTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"SubTableLogic\");\n$RefreshReg$(_c2, \"SubPageLogic\");\n$RefreshReg$(_c3, \"SubFieldsLogic\");\n$RefreshReg$(_c4, \"SubTable\");\n$RefreshReg$(_c5, \"SubPage\");\n$RefreshReg$(_c6, \"SubFields\");\n$RefreshReg$(_c7, \"SubField\");","map":{"version":3,"sources":["/home/djole/Documents/fullstack/training/frontend2/src/components/Table/SubTable.js"],"names":["GetDataById","FindParent","Form","SubTableLogic","page","id","pages","SubPageLogic","data","SubFieldsLogic","fields","forEach","field","options","parent","parentMore","key","push","SubTable","map","p","i","SubPage","name","SubFields","SubField"],"mappings":"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","sourcesContent":["import GetDataById from \"../../helpers/getDataById\";\nimport FindParent from \"../../helpers/FindParent\";\nimport Form from \"../Form/Form\";\n\nexport const SubTableLogic = ({ page, id }) => {\n  const pages = [{ page: page, id: id }];\n  SubPageLogic(page, id, pages);\n  return <SubTable pages={pages} />;\n};\n\nconst SubPageLogic = (page, id, pages) => {\n  const data = GetDataById(page, id);\n  return SubFieldsLogic(data, page, pages);\n};\n\nconst SubFieldsLogic = (data, page, pages) => {\n  page.fields.forEach((field) => {\n    if (field.options) {\n      const parent = FindParent(field);\n      const parentMore = { page: parent, id: data[field.key] };\n      pages.push(parentMore);\n      SubPageLogic(parent, data[field.key], pages);\n    }\n  });\n};\n\nconst SubTable = ({ pages }) => {\n  return pages.map((p, i) => {\n    return <SubPage key={i} id={p.id} page={p.page} />;\n  });\n};\n\nconst SubPage = ({ page, id }) => {\n  const data = GetDataById(page, id);\n  return (\n    <div className=\"sub\">\n      <div className=\"head\">{page.name}</div>\n      <Form data={data} active={id} fields={page.fields} defaultData={data} />\n      {/* <SubFields data={data} page={page} /> */}\n    </div>\n  );\n};\n\nconst SubFields = ({ data, page }) => {\n  return page.fields.map((field) => {\n    return <SubField key={field.key} field={field} data={data} />;\n  });\n};\n\nconst SubField = ({ field, data }) => {\n  const parent = FindParent(field);\n  if (parent) {\n    const page = GetDataById(parent, data[field.key]);\n    if (page) {\n      return (\n        <p>\n          {field.name}: {page.name}\n        </p>\n      );\n    }\n  }\n  if (field.name) {\n    return (\n      <p>\n        {field.name}: {data[field.key]}\n        {field.key === \"price\" && \"KM\"}\n      </p>\n    );\n  }\n  return null;\n};\n\nexport default SubTable;\n"]},"metadata":{},"sourceType":"module"}