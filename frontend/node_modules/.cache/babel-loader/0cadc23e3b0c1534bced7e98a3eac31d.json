{"ast":null,"code":"var _jsxFileName = \"/home/djole/Documents/fullstack/training/frontend2/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { GetDataById } from \"../../helpers/GetStates\";\nimport Field from \"./Field\";\nimport \"./Form.style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  active,\n  defaultData,\n  page\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState(defaultData);\n  const editable = true;\n  const data = GetDataById(page.key, active);\n  useEffect(() => {\n    if (active === 0) {\n      setFormData(defaultData);\n    } else {\n      setFormData(data);\n    }\n  }, [active, data, defaultData]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [page.fields.map(field => {\n      return editable ? /*#__PURE__*/_jsxDEV(Field, {\n        field: field,\n        data: formData,\n        setData: setFormData\n      }, field.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : data[field.key];\n    }), \")}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"HBm0adpcRKqM5WM2kqc2CPK//W8=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/djole/Documents/fullstack/training/frontend2/src/components/Form/Form.js"],"names":["useEffect","useState","GetDataById","Field","Form","active","defaultData","page","formData","setFormData","editable","data","key","fields","map","field"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,WAAV;AAAuBC,EAAAA;AAAvB,CAAD,KAAmC;AAAA;;AAC9C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACK,WAAD,CAAxC;AACA,QAAMI,QAAQ,GAAG,IAAjB;AACA,QAAMC,IAAI,GAAGT,WAAW,CAACK,IAAI,CAACK,GAAN,EAAWP,MAAX,CAAxB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,MAAM,KAAK,CAAf,EAAkB;AAChBI,MAAAA,WAAW,CAACH,WAAD,CAAX;AACD,KAFD,MAEO;AACLG,MAAAA,WAAW,CAACE,IAAD,CAAX;AACD;AACF,GANQ,EAMN,CAACN,MAAD,EAASM,IAAT,EAAeL,WAAf,CANM,CAAT;AAOA,sBACE;AAAA,eACGC,IAAI,CAACM,MAAL,CAAYC,GAAZ,CAAiBC,KAAD,IAAW;AAC1B,aAAOL,QAAQ,gBACb,QAAC,KAAD;AAEE,QAAA,KAAK,EAAEK,KAFT;AAGE,QAAA,IAAI,EAAEP,QAHR;AAIE,QAAA,OAAO,EAAEC;AAJX,SACOM,KAAK,CAACH,GADb;AAAA;AAAA;AAAA;AAAA,cADa,GAQbD,IAAI,CAACI,KAAK,CAACH,GAAP,CARN;AAUD,KAXA,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA7BD;;GAAMR,I;;KAAAA,I;AA+BN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { GetDataById } from \"../../helpers/GetStates\";\nimport Field from \"./Field\";\nimport \"./Form.style.css\";\n\nconst Form = ({ active, defaultData, page }) => {\n  const [formData, setFormData] = useState(defaultData);\n  const editable = true;\n  const data = GetDataById(page.key, active);\n\n  useEffect(() => {\n    if (active === 0) {\n      setFormData(defaultData);\n    } else {\n      setFormData(data);\n    }\n  }, [active, data, defaultData]);\n  return (\n    <form>\n      {page.fields.map((field) => {\n        return editable ? (\n          <Field\n            key={field.key}\n            field={field}\n            data={formData}\n            setData={setFormData}\n          />\n        ) : (\n          data[field.key]\n        );\n      })}\n      )}\n    </form>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}