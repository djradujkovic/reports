{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData } from \"../redux/actions/data\";\nexport const GetParents = page => {\n  _s();\n\n  const dispatch = useDispatch();\n  const pages = useSelector(state => state.pages.pages);\n  const fields = pages.find(p => p.key === page).fields;\n  useEffect(() => {\n    dispatch(getData(page));\n  }, [dispatch, page]);\n  fields.forEach(field => {\n    if (field.options) {\n      GetParents(field.options);\n    }\n  });\n};\n\n_s(GetParents, \"t4UF3LYvTu9wbmLD7sPALcgr8Bc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GetParents;\n\nconst FindParent = field => {\n  _s2();\n\n  return useSelector(state => {\n    const pages = state.pages.pages;\n\n    if (field.options) {\n      const parent = pages.find(page => page.key === field.options);\n      return parent;\n    }\n  });\n};\n\n_s2(FindParent, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = FindParent;\nexport default FindParent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetParents\");\n$RefreshReg$(_c2, \"FindParent\");","map":{"version":3,"sources":["/home/djole/Documents/fullstack/training/frontend2/src/helpers/FindParent.js"],"names":["useEffect","useDispatch","useSelector","getData","GetParents","page","dispatch","pages","state","fields","find","p","key","forEach","field","options","FindParent","parent"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAAA;;AAClC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYA,KAAxB,CAAzB;AACA,QAAME,MAAM,GAAGF,KAAK,CAACG,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUP,IAA5B,EAAkCI,MAAjD;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACH,OAAO,CAACE,IAAD,CAAR,CAAR;AACD,GAFQ,EAEN,CAACC,QAAD,EAAWD,IAAX,CAFM,CAAT;AAGAI,EAAAA,MAAM,CAACI,OAAP,CAAgBC,KAAD,IAAW;AACxB,QAAIA,KAAK,CAACC,OAAV,EAAmB;AACjBX,MAAAA,UAAU,CAACU,KAAK,CAACC,OAAP,CAAV;AACD;AACF,GAJD;AAKD,CAZM;;GAAMX,U;UACMH,W,EACHC,W;;;KAFHE,U;;AAcb,MAAMY,UAAU,GAAIF,KAAD;AAAA;;AAAA,SACjBZ,WAAW,CAAEM,KAAD,IAAW;AACrB,UAAMD,KAAK,GAAGC,KAAK,CAACD,KAAN,CAAYA,KAA1B;;AACA,QAAIO,KAAK,CAACC,OAAV,EAAmB;AACjB,YAAME,MAAM,GAAGV,KAAK,CAACG,IAAN,CAAYL,IAAD,IAAUA,IAAI,CAACO,GAAL,KAAaE,KAAK,CAACC,OAAxC,CAAf;AACA,aAAOE,MAAP;AACD;AACF,GANU,CADM;AAAA,CAAnB;;IAAMD,U;UACJd,W;;;MADIc,U;AASN,eAAeA,UAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData } from \"../redux/actions/data\";\n\nexport const GetParents = (page) => {\n  const dispatch = useDispatch();\n  const pages = useSelector((state) => state.pages.pages);\n  const fields = pages.find((p) => p.key === page).fields;\n  useEffect(() => {\n    dispatch(getData(page));\n  }, [dispatch, page]);\n  fields.forEach((field) => {\n    if (field.options) {\n      GetParents(field.options);\n    }\n  });\n};\n\nconst FindParent = (field) =>\n  useSelector((state) => {\n    const pages = state.pages.pages;\n    if (field.options) {\n      const parent = pages.find((page) => page.key === field.options);\n      return parent;\n    }\n  });\n\nexport default FindParent;\n"]},"metadata":{},"sourceType":"module"}