{"ast":null,"code":"var _jsxFileName = \"/home/djole/Documents/fullstack/sluzba/frontend/src/components/Table/SubTable.js\";\nimport { GetDataById } from \"../../helpers/GetStates\";\nimport FindParent from \"../../helpers/FindParent\";\nimport Form from \"../Form/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SubTableLogic = ({\n  page,\n  id\n}) => {\n  const pages = [{\n    page: page,\n    id: id\n  }];\n  SubPageLogic(page, id, pages);\n  return /*#__PURE__*/_jsxDEV(SubTable, {\n    pages: pages\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_c = SubTableLogic;\n\nconst SubPageLogic = (page, id, pages) => {\n  const data = GetDataById(page.key, id);\n  return SubFieldsLogic(data, page, pages);\n};\n\n_c2 = SubPageLogic;\n\nconst SubFieldsLogic = (data, page, pages) => {\n  page.fields.forEach(field => {\n    if (field.options) {\n      const parent = FindParent(field);\n      const parentMore = {\n        page: parent,\n        id: data[field.key]\n      };\n      pages.push(parentMore);\n      if (data[field.key] === 0) return null;\n      SubPageLogic(parent, data[field.key], pages);\n    }\n  });\n};\n\n_c3 = SubFieldsLogic;\n\nconst SubTable = ({\n  pages\n}) => {\n  return pages.map((p, i) => {\n    return /*#__PURE__*/_jsxDEV(SubPage, {\n      id: p.id,\n      page: p.page\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  });\n};\n\n_c4 = SubTable;\n\nconst SubPage = ({\n  page,\n  id\n}) => {\n  const data = GetDataById(page.key, id);\n  return (\n    /*#__PURE__*/\n    // {/* <div className=\"head\">{page.name}</div> */}\n    _jsxDEV(Form, {\n      active: id,\n      defaultData: data,\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this) // {/* <SubFields data={data} page={page} /> */}\n\n  );\n}; // const SubFields = ({ data, page }) => {\n//   return page.fields.map((field) => {\n//     return <SubField key={field.key} field={field} data={data} />;\n//   });\n// };\n// const SubField = ({ field, data }) => {\n//   const parent = FindParent(field);\n//   if (parent) {\n//     const page = GetDataById(parent.key, data[field.key]);\n//     if (page) {\n//       return (\n//         <p>\n//           {field.name}: {page.name}\n//         </p>\n//       );\n//     }\n//   }\n//   if (field.name) {\n//     return (\n//       <p>\n//         {field.name}: {data[field.key]}\n//         {field.key === \"price\" && \"KM\"}\n//       </p>\n//     );\n//   }\n//   return null;\n// };\n\n\n_c5 = SubPage;\nexport default SubTable;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SubTableLogic\");\n$RefreshReg$(_c2, \"SubPageLogic\");\n$RefreshReg$(_c3, \"SubFieldsLogic\");\n$RefreshReg$(_c4, \"SubTable\");\n$RefreshReg$(_c5, \"SubPage\");","map":{"version":3,"sources":["/home/djole/Documents/fullstack/sluzba/frontend/src/components/Table/SubTable.js"],"names":["GetDataById","FindParent","Form","SubTableLogic","page","id","pages","SubPageLogic","data","key","SubFieldsLogic","fields","forEach","field","options","parent","parentMore","push","SubTable","map","p","i","SubPage"],"mappings":";AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAkB;AAC7C,QAAMC,KAAK,GAAG,CAAC;AAAEF,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,EAAE,EAAEA;AAAlB,GAAD,CAAd;AACAE,EAAAA,YAAY,CAACH,IAAD,EAAOC,EAAP,EAAWC,KAAX,CAAZ;AACA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJM;KAAMH,a;;AAMb,MAAMI,YAAY,GAAG,CAACH,IAAD,EAAOC,EAAP,EAAWC,KAAX,KAAqB;AACxC,QAAME,IAAI,GAAGR,WAAW,CAACI,IAAI,CAACK,GAAN,EAAWJ,EAAX,CAAxB;AACA,SAAOK,cAAc,CAACF,IAAD,EAAOJ,IAAP,EAAaE,KAAb,CAArB;AACD,CAHD;;MAAMC,Y;;AAKN,MAAMG,cAAc,GAAG,CAACF,IAAD,EAAOJ,IAAP,EAAaE,KAAb,KAAuB;AAC5CF,EAAAA,IAAI,CAACO,MAAL,CAAYC,OAAZ,CAAqBC,KAAD,IAAW;AAC7B,QAAIA,KAAK,CAACC,OAAV,EAAmB;AACjB,YAAMC,MAAM,GAAGd,UAAU,CAACY,KAAD,CAAzB;AACA,YAAMG,UAAU,GAAG;AAAEZ,QAAAA,IAAI,EAAEW,MAAR;AAAgBV,QAAAA,EAAE,EAAEG,IAAI,CAACK,KAAK,CAACJ,GAAP;AAAxB,OAAnB;AACAH,MAAAA,KAAK,CAACW,IAAN,CAAWD,UAAX;AACA,UAAIR,IAAI,CAACK,KAAK,CAACJ,GAAP,CAAJ,KAAoB,CAAxB,EAA2B,OAAO,IAAP;AAC3BF,MAAAA,YAAY,CAACQ,MAAD,EAASP,IAAI,CAACK,KAAK,CAACJ,GAAP,CAAb,EAA0BH,KAA1B,CAAZ;AACD;AACF,GARD;AASD,CAVD;;MAAMI,c;;AAYN,MAAMQ,QAAQ,GAAG,CAAC;AAAEZ,EAAAA;AAAF,CAAD,KAAe;AAC9B,SAAOA,KAAK,CAACa,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,wBAAO,QAAC,OAAD;AAAiB,MAAA,EAAE,EAAED,CAAC,CAACf,EAAvB;AAA2B,MAAA,IAAI,EAAEe,CAAC,CAAChB;AAAnC,OAAciB,CAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,CAAP;AAGD,CAJD;;MAAMH,Q;;AAMN,MAAMI,OAAO,GAAG,CAAC;AAAElB,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAkB;AAChC,QAAMG,IAAI,GAAGR,WAAW,CAACI,IAAI,CAACK,GAAN,EAAWJ,EAAX,CAAxB;AACA;AAAA;AACE;AACA,YAAC,IAAD;AAAM,MAAA,MAAM,EAAEA,EAAd;AAAkB,MAAA,WAAW,EAAEG,IAA/B;AAAqC,MAAA,IAAI,EAAEJ;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF,CAGE;;AAHF;AAKD,CAPD,C,CASA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;MApCMkB,O;AAsCN,eAAeJ,QAAf","sourcesContent":["import { GetDataById } from \"../../helpers/GetStates\";\nimport FindParent from \"../../helpers/FindParent\";\nimport Form from \"../Form/Form\";\n\nexport const SubTableLogic = ({ page, id }) => {\n  const pages = [{ page: page, id: id }];\n  SubPageLogic(page, id, pages);\n  return <SubTable pages={pages} />;\n};\n\nconst SubPageLogic = (page, id, pages) => {\n  const data = GetDataById(page.key, id);\n  return SubFieldsLogic(data, page, pages);\n};\n\nconst SubFieldsLogic = (data, page, pages) => {\n  page.fields.forEach((field) => {\n    if (field.options) {\n      const parent = FindParent(field);\n      const parentMore = { page: parent, id: data[field.key] };\n      pages.push(parentMore);\n      if (data[field.key] === 0) return null;\n      SubPageLogic(parent, data[field.key], pages);\n    }\n  });\n};\n\nconst SubTable = ({ pages }) => {\n  return pages.map((p, i) => {\n    return <SubPage key={i} id={p.id} page={p.page} />;\n  });\n};\n\nconst SubPage = ({ page, id }) => {\n  const data = GetDataById(page.key, id);\n  return (\n    // {/* <div className=\"head\">{page.name}</div> */}\n    <Form active={id} defaultData={data} page={page} />\n    // {/* <SubFields data={data} page={page} /> */}\n  );\n};\n\n// const SubFields = ({ data, page }) => {\n//   return page.fields.map((field) => {\n//     return <SubField key={field.key} field={field} data={data} />;\n//   });\n// };\n\n// const SubField = ({ field, data }) => {\n//   const parent = FindParent(field);\n//   if (parent) {\n//     const page = GetDataById(parent.key, data[field.key]);\n//     if (page) {\n//       return (\n//         <p>\n//           {field.name}: {page.name}\n//         </p>\n//       );\n//     }\n//   }\n//   if (field.name) {\n//     return (\n//       <p>\n//         {field.name}: {data[field.key]}\n//         {field.key === \"price\" && \"KM\"}\n//       </p>\n//     );\n//   }\n//   return null;\n// };\n\nexport default SubTable;\n"]},"metadata":{},"sourceType":"module"}