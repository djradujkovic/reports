{"ast":null,"code":"var _jsxFileName = \"/home/djole/Documents/fullstack/sluzba/frontend/src/components/Select/Select.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { GetData } from \"../../helpers/GetStates\";\nimport \"./Select.style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectInput = ({\n  setDisplayOptions,\n  options,\n  value,\n  setIsOpen,\n  field,\n  search,\n  setSearch,\n  setData,\n  editable\n}) => {\n  _s();\n\n  //   const selected = GetDataById(field.options, value);\n  //   const [search, setSearch] = useState(value ? selected.name : \"\");\n  useEffect(() => {\n    setDisplayOptions(options.filter(option => {\n      if (option.name) {\n        return option.name.toLocaleLowerCase().search(search.toLocaleLowerCase()) !== -1;\n      }\n\n      return options;\n    }));\n\n    if (search === \"\") {//       setData((oldData) => ({ ...oldData, [field.key]: 0 }));\n    }\n  }, [search, options, field, setDisplayOptions]);\n\n  const handleOpen = () => {\n    if (!editable) return null;\n    setIsOpen(oldOpen => !oldOpen);\n    setData(oldData => ({ ...oldData,\n      [field.key]: 0\n    })); //     setSearch(\"\");\n  }; // const handleClose = () => {\n  //   setIsOpen(false);\n  //   //     setData((oldData) => ({ ...oldData, [field.key]: oldOpened }));\n  // };\n\n\n  const style = {\n    border: !editable && \"none\",\n    cursor: \"default\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    onClick: () => handleOpen(),\n    placeholder: `${field.label}..` //       onFocus={() => setIsOpen(true)}\n    //       onBlur={() => handleClose()}\n    ,\n    onChange: e => setSearch(e.target.value),\n    value: search,\n    style: style,\n    disabled: !editable\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectInput, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SelectInput;\n\nconst Select = ({\n  id,\n  field,\n  value,\n  setData,\n  editable\n}) => {\n  _s2();\n\n  const options = GetData(field.options);\n  const [isOpen, setIsOpen] = useState(false);\n  const [displayOptions, setDisplayOptions] = useState(options);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    if (value) {\n      const option = options.find(option => option.id === value);\n      setSearch(option && option.name);\n    } else {\n      setSearch(\"\");\n    }\n  }, [value, options]);\n\n  const handleSelect = (e, option) => {\n    e.preventDefault(); //     setSearch(option.name);\n\n    setData(oldData => ({ ...oldData,\n      [field.key]: option.id\n    }));\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select filter-select\",\n    id: id,\n    children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n      setDisplayOptions: setDisplayOptions,\n      value: value,\n      options: options,\n      setIsOpen: setIsOpen,\n      field: field,\n      search: search,\n      setSearch: setSearch,\n      setData: setData,\n      editable: editable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayOptions.map(option => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => handleSelect(e, option),\n          children: option.name\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : \"\" // !value && <div className=\"label\">{field.label}</div>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Select, \"mPkrMHUgPjx8GVSezvtOnAfAda0=\");\n\n_c2 = Select;\nexport default Select;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SelectInput\");\n$RefreshReg$(_c2, \"Select\");","map":{"version":3,"sources":["/home/djole/Documents/fullstack/sluzba/frontend/src/components/Select/Select.js"],"names":["useEffect","useState","GetData","SelectInput","setDisplayOptions","options","value","setIsOpen","field","search","setSearch","setData","editable","filter","option","name","toLocaleLowerCase","handleOpen","oldOpen","oldData","key","style","border","cursor","label","e","target","Select","id","isOpen","displayOptions","find","handleSelect","preventDefault","map"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { GetData } from \"../../helpers/GetStates\";\n\nimport \"./Select.style.css\";\n\nconst SelectInput = ({\n  setDisplayOptions,\n  options,\n  value,\n  setIsOpen,\n  field,\n  search,\n  setSearch,\n  setData,\n  editable,\n}) => {\n  //   const selected = GetDataById(field.options, value);\n  //   const [search, setSearch] = useState(value ? selected.name : \"\");\n  useEffect(() => {\n    setDisplayOptions(\n      options.filter((option) => {\n        if (option.name) {\n          return (\n            option.name\n              .toLocaleLowerCase()\n              .search(search.toLocaleLowerCase()) !== -1\n          );\n        }\n        return options;\n      })\n    );\n    if (search === \"\") {\n      //       setData((oldData) => ({ ...oldData, [field.key]: 0 }));\n    }\n  }, [search, options, field, setDisplayOptions]);\n\n  const handleOpen = () => {\n    if (!editable) return null;\n    setIsOpen((oldOpen) => !oldOpen);\n    setData((oldData) => ({ ...oldData, [field.key]: 0 }));\n    //     setSearch(\"\");\n  };\n\n  // const handleClose = () => {\n  //   setIsOpen(false);\n  //   //     setData((oldData) => ({ ...oldData, [field.key]: oldOpened }));\n  // };\n  const style = {\n    border: !editable && \"none\",\n    cursor: \"default\",\n  };\n  return (\n    <input\n      onClick={() => handleOpen()}\n      placeholder={`${field.label}..`}\n      //       onFocus={() => setIsOpen(true)}\n      //       onBlur={() => handleClose()}\n      onChange={(e) => setSearch(e.target.value)}\n      value={search}\n      style={style}\n      disabled={!editable}\n    ></input>\n  );\n};\n\nconst Select = ({ id, field, value, setData, editable }) => {\n  const options = GetData(field.options);\n  const [isOpen, setIsOpen] = useState(false);\n  const [displayOptions, setDisplayOptions] = useState(options);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    if (value) {\n      const option = options.find((option) => option.id === value);\n      setSearch(option && option.name);\n    } else {\n      setSearch(\"\");\n    }\n  }, [value, options]);\n\n  const handleSelect = (e, option) => {\n    e.preventDefault();\n    //     setSearch(option.name);\n    setData((oldData) => ({ ...oldData, [field.key]: option.id }));\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"select filter-select\" id={id}>\n      <SelectInput\n        setDisplayOptions={setDisplayOptions}\n        value={value}\n        options={options}\n        setIsOpen={setIsOpen}\n        field={field}\n        search={search}\n        setSearch={setSearch}\n        setData={setData}\n        editable={editable}\n      />\n      {isOpen ? (\n        <div>\n          {displayOptions.map((option) => {\n            return (\n              <div key={option.id} onClick={(e) => handleSelect(e, option)}>\n                {option.name}\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        \"\"\n        // !value && <div className=\"label\">{field.label}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}